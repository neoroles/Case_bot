from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery, Message

from data import config
from keyboards.inline.admins.other.misc import mod_set
from keyboards.inline.users.profile.misc import key, key_del
from loader import dp, bot, db
from states.admin_state import UpKeyBal


@dp.callback_query_handler(text='other_setting', user_id=config.moderators)
async def other_setting(call: CallbackQuery):
    await call.answer()
    text = '''–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
    
üóÉ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–µ–π—Å–æ–≤:</b> –º–µ–Ω—è–µ—à—å –∫–∞–∂–¥—ã–π –∫–µ–π—Å –ø–æ –≤—ã–±–æ—Ä—É

‚ö´ <b>–õ–æ—Ç–µ—Ä–µ—è:</b> —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞–≤–æ–∫ –∏ –∑–∞–ø—É—Å–∫

üé∞ <b>–†–æ–∑—ã–≥—Ä—ã—à:</b> –∑–∞–ø—É—Å–∫ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–∞ –∫–∞–Ω–∞–ª–µ

‚úÖ <b>–ë–ª–æ–∫:</b> –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∏–≥—Ä–æ–≤–æ–π —á–∞—Å—Ç–∏ –±–æ—Ç–∞

üí∞ <b>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å üîë:</b> —Å–º–µ–Ω–∞ –±–∞–ª–∞–Ω—Å–∞ –∏ –∫–ª—é—á–µ–π
–ú–µ–Ω—è–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å –±–∞–ª–∞–Ω—Å–æ–º –±–æ—Ç–∞'''
    await bot.edit_message_text(text=text, chat_id=call.message.chat.id,
                                message_id=call.message.message_id,
                                reply_markup=mod_set(call.message.chat.id))


@dp.callback_query_handler(text='up_balance', user_id=config.moderators)
async def up_key_balance(call: CallbackQuery):
    await call.answer()
    await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id)
    await UpKeyBal.Input.set()
    text = '–ù–µ –æ—à–∏–±–∏—Å—å:\n\n<code>–ü–∞—Ä–∞–º–µ—Ç—Ä - —é–∑–µ—Ä_–∏–¥ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ</code>\n\n–ü—Ä–∏–º–µ—Ä:\n<code>key - 111111 - 10</code>\n' \
           '<code>bal - 111111 - 100</code>'
    await bot.send_message(chat_id=call.message.chat.id, text=text, reply_markup=key)


# –ó–ê–í–ò–°–ò–ú–û–°–¢–¨ –ù–ê –ë–ê–õ–ê–ù–°–´ –ï–©–ï –ù–ï –ü–†–û–ü–ò–°–ê–ù–ê
@dp.message_handler(state=UpKeyBal.Input)
async def input_parameters(message: Message, state: FSMContext):
    if message.text == '–û—Ç–º–µ–Ω–∞':
        await message.answer('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=key_del)
        text = '''–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:

        üóÉ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–µ–π—Å–æ–≤:</b> –º–µ–Ω—è–µ—à—å –∫–∞–∂–¥—ã–π –∫–µ–π—Å –ø–æ –≤—ã–±–æ—Ä—É

        ‚ö´ <b>–õ–æ—Ç–µ—Ä–µ—è:</b> —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞–≤–æ–∫ –∏ –∑–∞–ø—É—Å–∫

        üé∞ <b>–†–æ–∑—ã–≥—Ä—ã—à:</b> –∑–∞–ø—É—Å–∫ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–∞ –∫–∞–Ω–∞–ª–µ

        ‚úÖ <b>–ë–ª–æ–∫:</b> –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∏–≥—Ä–æ–≤–æ–π —á–∞—Å—Ç–∏ –±–æ—Ç–∞

        üí∞ <b>–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å üîë:</b> —Å–º–µ–Ω–∞ –±–∞–ª–∞–Ω—Å–∞ –∏ –∫–ª—é—á–µ–π
        –ú–µ–Ω—è–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å –±–∞–ª–∞–Ω—Å–æ–º –±–æ—Ç–∞'''
        await message.answer(text=text, disable_notification=True, reply_markup=mod_set(message.chat.id))
        await state.finish()
    else:
        try:
            answer = message.text
            data = answer.split(' - ', 2)
            parameter = data[0]
            user = data[1]
            quantity = data[2]
            if parameter == 'key' or parameter == 'Key':
                try:
                    await db.up_key(user_id=user, key=int(quantity))
                    await message.answer('—É—Å–ø–µ—à–Ω–æ - –∫–ª—é—á–∏', reply_markup=key_del)
                    await message.answer(text='–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', disable_notification=True,
                                         reply_markup=mod_set(message.chat.id))
                    await state.finish()
                except Exception as e:
                    await message.answer(f'–û—à–∏–±–∫–∞ {e}')
            elif parameter == 'bal' or parameter == 'Bal':
                try:
                    await db.up_balance(user_id=user, balance=int(quantity)*10000)
                    await message.answer('—É—Å–ø–µ—à–Ω–æ - –±–∞–ª–∞–Ω—Å', reply_markup=key_del)
                    await message.answer(text='–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', disable_notification=True,
                                         reply_markup=mod_set(message.chat.id))
                    from utils.update_balance import change_balance
                    await change_balance(balance_all=int(quantity)*10000, balance_bot=0)
                    await state.finish()
                except Exception as e:
                    await message.answer(f'–û—à–∏–±–∫–∞ {e}')
            else:
                await message.answer('–æ—à–∏–±–∫–∞ –≤–≤–æ–¥–∞')
        except Exception as e:
            await message.answer(f'–æ—à–∏–±–∫–∞ {e}')
